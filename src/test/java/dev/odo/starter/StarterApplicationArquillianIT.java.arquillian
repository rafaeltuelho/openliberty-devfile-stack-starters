package dev.odo.starter;

import java.net.URL;

import org.jboss.arquillian.container.test.api.Deployment;
import org.jboss.arquillian.container.test.api.RunAsClient;
import org.jboss.arquillian.junit.Arquillian;
import org.jboss.arquillian.junit.InSequence;
import org.jboss.arquillian.test.api.ArquillianResource;
import org.jboss.shrinkwrap.api.ShrinkWrap;
import org.jboss.shrinkwrap.api.spec.WebArchive;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

import jakarta.inject.Inject;
import jakarta.ws.rs.client.Client;
import jakarta.ws.rs.client.ClientBuilder;
import jakarta.ws.rs.client.WebTarget;
import jakarta.ws.rs.core.Response;


@RunWith(Arquillian.class)
public class StarterApplicationArquillianIT {

    private static final String WARNAME = "openliberty-starter-app.war";
    private Client client = ClientBuilder.newClient();

    @Deployment(testable = true)
    public static WebArchive createDeployment() {
        WebArchive archive = ShrinkWrap.create(WebArchive.class, WARNAME)
                                       .addPackages(true, "dev.odo.starter");
        return archive;
    }

    @ArquillianResource
    private URL baseURL;

    @Inject
    GreetingsResource greetingsResource;

    @Test
    @RunAsClient
    @InSequence(1)
    public void testInventoryEndpoints() throws Exception {
        String localhosturl = baseURL  + "/api/hello/Rafael";

        WebTarget localhosttarget = client.target(localhosturl);
        Response localhostresponse = localhosttarget.request().get();

        Assert.assertEquals("Incorrect response code from " + localhosturl, 200, localhostresponse.getStatus());

        String response = localhostresponse.readEntity(String.class);
        Assert.assertEquals("Response does not match", "Rafael", response);

        localhostresponse.close();
    }
}