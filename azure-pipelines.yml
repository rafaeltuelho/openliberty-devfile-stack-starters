# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
name: 'CI: Build and Push'
variables:
  dev_tag: $[format('dev-{0:yyyyMMddHHmmss}', pipeline.startTime)]
  test_tag: $[format('test-{0:yyyyMMddHHmmss}', pipeline.startTime)]
  prod_tag: $[format('prod-{0:yyyyMMddHHmmss}', pipeline.startTime)]

parameters:
  - name: buildConfig
    displayName: Build Configuration
    type: string
    default: Release
    values:
    - Release
    - Debug

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  displayName: Compile and build WAR file
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'war'

- task: Bash@3
  displayName: Debug
  inputs:
    targetType: 'inline'
    script: |
      pwd
      ls -la build/libs/
      ls -la src/main/liberty/config/

- task: Docker@2
  displayName: Login into quay.io
  inputs:
    containerRegistry: 'Quay.io'
    command: 'login'

- task: BuildpacksInstaller@1
  displayName: Install Buildpacks CLI
  inputs:
    buildpacksVersion: '0.29.0'

- task: BuildpacksTask@1
  displayName: Build the OCI with Buildpacks
  inputs:
    command: 'build'
    builder: 'gcr.io/paketo-buildpacks/builder:base'
    imageName: 'quay.io/$(REGISTRY_REPO)/$(PRODUCED_CONTAINER_IMAGE_NAME)'
    buildpacks: |
      paketo-buildpacks/eclipse-openj9
      paketo-buildpacks/java
    projectPath: './'
    envVariables: |
      BP_JAVA_APP_SERVER=liberty
      BP_LIBERTY_PROFILE=microProfile6
      BP_GRADLE_BUILD_ARGUMENTS=--no-daemon war
      BP_GRADLE_ADDITIONAL_BUILD_ARGUMENTS=--full-stacktrace
      BP_GRADLE_BUILT_ARTIFACT=build/libs/*.war src/main/liberty/config/*
    pullPolicy: 'if-not-present'

- task: Docker@2
  displayName: Push image to Registry
  inputs:
    containerRegistry: 'Quay.io'
    repository: '$(REGISTRY_REPO)/$(PRODUCED_CONTAINER_IMAGE_NAME)'
    command: 'push'
    tags: |
      latest
